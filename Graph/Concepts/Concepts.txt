-- Graph | Theory
1. Graph is a data structure that stores connected data.
2. Vertex/Node
3. Edge
4. Directed Graph | All the edges are directed.
5. UnDirected Graph
6. Cyclic | Acyclic Graphs
7. Path | Contains a lot of nodes & each of them are reachable.
8. Degree(x) | Undirected Graph | The number of nodes goes or come through that x node. || No. of Degree = 2 * No. of Edges | Because every edge connected with two nodes.
9. Directed Graph | InDegree & OutDegree | Indegree- No of incoming edges on that node | outDegree- No of outgoing edges from that node.
10. Edge-weight | if weight didn't provided means it's unit edge. |


Notes: A Node cannot appear twice in a path.


-- Representation of Graph
1. Matrix way | Adjacency matric  | O(n^2) space to take Inputs
2. List way | Adjacency list | O(2*n) space to take Inputs | where n = no. of edges

-- Matrix way | Undirected graph
Example : 
1. Without weighted graph
adj[u][v] = 1;
adj[v][u] = 1;

2. With weighted graph | instead of 1 put the given weight
adj[u][v] = 3;
adj[v][u] = 5;

-- Matrix way | Directed graph
1. Without weighted graph
adj[u][v] = 1;

2. With weighted graph | instead of 1 put the given weight
adj[u][v] = 3;


